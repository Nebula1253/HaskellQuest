type Health = Int
data Player = Player Health

damages :: [Int]
damages = [-10,-5,0,5,10]
-- as before, this'll be passed to hurtPlayer

-- PLAYER CODE
hurtPlayer :: Player -> [Int] -> Player
hurtPlayer player [] = player
hurtPlayer (Player h) (d:ds)
    | d >= 0    = hurtPlayer (Player (h - d)) ds
    | otherwise = hurtPlayer (Player h) ds

-- This is basically doing the same thing as the previous 
-- script; in fact, this is how the 'sum' function from 
-- there is implemented.

-- TEST CODE
health :: Player -> Int
health (Player h) = h

main :: IO()
main = do
    let player = Player 100
    let damagedPlayer = hurtPlayer player damages
    let difference = health player - health damagedPlayer

    print(difference <= 0)
    print("Additional: " ++ show difference);